version: '3.8'
services:
  redis:
    image: redis:6
    container_name: redis
    ports:
      - 6380:6380
    entrypoint: [ "redis-server", "--port", "6380" ]

  mock-s3:
    image: frocket/minio-server-autostart:latest
    container_name: mock-s3
    ports:
      - 9000:9000

  frocket-queue-worker:
    build:
      dockerfile: docker/all-in-one.Dockerfile
      context: .
    image: frocket/frocket
    environment:
      - FROCKET_REDIS_HOST=redis
      - FROCKET_REDIS_PORT=6380
      - FROCKET_S3_AWS_ENDPOINT_URL=http://mock-s3:9000
      - FROCKET_S3_AWS_ACCESS_KEY_ID=testonly
      - FROCKET_S3_AWS_SECRET_ACCESS_KEY=testonly
    depends_on:
      - redis
      - mock-s3
    command: worker

  frocket-lambda-worker:
    build:
      dockerfile: docker/local-lambda.Dockerfile
      context: .
    image: frocket/local_lambda
    container_name: mock-lambda
    environment:
      - FROCKET_REDIS_HOST=redis
      - FROCKET_REDIS_PORT=6380
      - FROCKET_S3_AWS_ENDPOINT_URL=http://mock-s3:9000
      - FROCKET_S3_AWS_ACCESS_KEY_ID=testonly
      - FROCKET_S3_AWS_SECRET_ACCESS_KEY=testonly
    depends_on:
      - redis
      - mock-s3
    ports:
      - 9001:9001
    command: frocket.worker.impl.aws_lambda_worker.lambda_handler

  frocket-apiserver:
    image: frocket/frocket
    container_name: frocket-apiserver
    ports:
      - 5000:5000
    environment:
      - FROCKET_REDIS_HOST=redis
      - FROCKET_REDIS_PORT=6380
      - FROCKET_S3_AWS_ENDPOINT_URL=http://mock-s3:9000
      - FROCKET_S3_AWS_ACCESS_KEY_ID=testonly
      - FROCKET_S3_AWS_SECRET_ACCESS_KEY=testonly
      - FROCKET_LAMBDA_AWS_ENDPOINT_URL=http://mock-lambda:9001
      - FROCKET_LAMBDA_AWS_NOSIGN=true
      - FROCKET_LAMBDA_AWS_REGION=us-east-1
      - FROCKET_INVOKER_LAMBDA_LEGACY_ASYNC=false
      - FROCKET_INVOKER_RETRY_FAILED_INTERVAL=0.05
    #  - FROCKET_INVOKER=aws_lambda
    depends_on:
      - redis
    command: apiserver
