name: Tests
on: [ push ]
jobs:
  ci:
    runs-on: ubuntu-18.04
    timeout-minutes: 10

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./venv/
          key: ${{ runner.os }}-venvcache-${{ hashFiles('./requirements.txt','./test-requirements.txt','./setup.py') }}

      - name: Build virtual environment and install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -e .
          pip install -r test-requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys:
            ${{ runner.os }}-buildx-

      - name: Docker build all-in-one
        id: docker_build_all_in_one
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/all-in-one.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          tags: frocket/frocket
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Docker build local-lambda
        id: docker_build_all_local_lambda
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/local-lambda.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          tags: frocket/local-lambda
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Launch docker-compose
        run: |
          docker-compose up -d
          sleep 2

      - name: Test with pytest
        run: |
          source venv/bin/activate
          export TEST_REDIS_PORT=6380
          export FROCKET_S3_AWS_ENDPOINT_URL=http://127.0.0.1:9000
          export FROCKET_S3_AWS_ACCESS_KEY_ID=testonly
          export FROCKET_S3_AWS_SECRET_ACCESS_KEY=testonly
          export FROCKET_LAMBDA_AWS_ENDPOINT_URL=http://127.0.0.1:9001
          export FROCKET_LAMBDA_AWS_NOSIGN=true
          export FROCKET_LAMBDA_AWS_REGION=us-east-1
          export FROCKET_INVOKER_LAMBDA_LEGACY_ASYNC=false
          export FROCKET_INVOKER_RETRY_FAILED_INTERVAL=0.05
          pytest --cov=frocket --cov-report=html
